//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirectoryWalker.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DirectoryWalker.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bytes.
        /// </summary>
        public static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;li class=&quot;directory-entry&quot;&gt;
        ///    &lt;details&gt;
        ///        &lt;summary&gt;{$dirName}&lt;/summary&gt;
        ///        &lt;ul&gt;
        ///            {$directories}
        ///            {$files}
        ///        &lt;/ul&gt;
        ///    &lt;/details&gt;
        ///&lt;/li&gt;.
        /// </summary>
        public static string dir_entry_template {
            get {
                return ResourceManager.GetString("dir_entry_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;li class=&quot;file-entry&quot;&gt;
        ///    &lt;p&gt;📄 {$fileName}&lt;/p&gt;&lt;p class=&quot;file-entry-metadata&quot;&gt;{$mimeType}&lt;/p&gt; &lt;p class=&quot;file-entry-metadata&quot;&gt;{$fileSize}&lt;/p&gt;
        ///&lt;/li&gt;.
        /// </summary>
        public static string file_entry_template {
            get {
                return ResourceManager.GetString("file_entry_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specified path is not a directory! {0}.
        /// </summary>
        public static string FilePathIsNotDirectoryExceptionMessageFormat {
            get {
                return ResourceManager.GetString("FilePathIsNotDirectoryExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GB.
        /// </summary>
        public static string Gigabytes {
            get {
                return ResourceManager.GetString("Gigabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на kB.
        /// </summary>
        public static string Kilobytes {
            get {
                return ResourceManager.GetString("Kilobytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MB.
        /// </summary>
        public static string Megabytes {
            get {
                return ResourceManager.GetString("Megabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;li&gt;
        ///    &lt;details&gt;
        ///        &lt;summary&gt;{$mimeType}&lt;/summary&gt;
        ///        &lt;div class=&quot;mime-type-info&quot;&gt;
        ///            &lt;p&gt;Total size: {$mimeTotalSize}&lt;/p&gt;
        ///            &lt;p&gt;Average file size: {$mimeAverageFileSize}&lt;/p&gt;
        ///            &lt;p&gt;Amount of files: {$mimeAmountOfFiles}&lt;/p&gt;
        ///        &lt;/div&gt;
        ///    &lt;/details&gt;
        ///&lt;/li&gt;.
        /// </summary>
        public static string mime_type_template {
            get {
                return ResourceManager.GetString("mime_type_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No MIME types found.
        /// </summary>
        public static string NoMimeTypesFound {
            get {
                return ResourceManager.GetString("NoMimeTypesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Report for directory: {0}.
        /// </summary>
        public static string ReportTitleFormat {
            get {
                return ResourceManager.GetString("ReportTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;title&gt;{$reportTitle}&lt;/title&gt;
        ///        &lt;style&gt;
        ///            html {
        ///                font-family: &apos;Segoe UI&apos;, Tahoma, Geneva, Verdana, sans-serif;
        ///            }
        ///
        ///            body {
        ///                margin: 0;
        ///                padding: 35px;
        ///            }
        ///
        ///            h1 {
        ///                font-size: 20pt;
        ///            }
        ///
        ///            h2 {
        ///                font-size: 16pt;
        ///            }
        ///
        ///            .report-summary {
        ///                background-color: #ee [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string template {
            get {
                return ResourceManager.GetString("template", resourceCulture);
            }
        }
    }
}
